name: deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: deploy

    permissions:
      contents: "read"
      id-token: "write"

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: arduino/setup-task@v1

      # ------------------------------------------------------------------------

      - name: Python - Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        id: cached-python-env
        with:
          path: ${{ env.pythonLocation }}
          key: >
            python
            ${{ runner.os }}
            python-${{ matrix.python-version }}
            ${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        if: steps.cached-python-env.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt

      - name: Python - Print Python info
        run: |
          which python
          python --version
          which pip
          pip --version
          pip freeze

      # ------------------------------------------------------------------------
      # Build

      - name: Build website
        run: |
          mkdocs build

      # ------------------------------------------------------------------------
      #  Publish

      - name: Configure GCP auth
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Upload to GCS
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: site
          destination: ${{ secrets.GCP_BUCKET }}
          parent: false
          headers: |-
            cache-control: no-cache

      - name: Upload to GCS (sync)
        run: gsutil rsync -r -d site gs://${{ secrets.GCP_BUCKET }}

      - name: Configure GSC Cache
        run: |
          gsutil setmeta -r -h "Cache-Control: no-cache" gs://${{ secrets.GCP_BUCKET }}

      - name: Purge Cloudflare Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
